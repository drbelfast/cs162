1. What is the value of argv?
    2
2. What is pointed to by argv?
    0x7fffffffe814 "/home/vagrant/code/personal/hw0/wc
3. What is the address of the function main?
    int (*)(int, char **)) 0x4005bd <main>
4. Try `info stack`. Explain what you see
    main (argc=2, argv=0x7fffffffe5e8) at wc.c:9
    we only have one function, with local variable argc, and argv
5. Try `info frame`. Explain what you see
    Stack level 0, frame at 0x7fffffffe510:
    rip = 0x4005df in main (wc.c:9); saved rip = 0x7ffff7a36f45
    source language c.
    Arglist at 0x7fffffffe500, args: argc=2, argv=0x7fffffffe5e8
    Locals at 0x7fffffffe500, Previous frame's sp is 0x7fffffffe510
    Saved registers:
    rbp at 0x7fffffffe500, rip at 0x7fffffffe508

6. Try `info registers`. Which registers are holding aspects of the program that you recognize?
    rax            0x7fffffffe837   140737488349239
    rbx            0x0      0
    rcx            0x0      0
    rdx            0x7fffffffe600   140737488348672
    rsi            0x7fffffffe5e8   140737488348648
    rdi            0x2      2
    rbp            0x7fffffffe500   0x7fffffffe500
    rsp            0x7fffffffe4d0   0x7fffffffe4d0
    r8             0x7ffff7dd4e80   140737351863936
    r9             0x7ffff7dea530   140737351951664
    r10            0x7fffffffe390   140737488348048
    r11            0x7ffff7a36e50   140737348070992
    r12            0x4004d0 4195536
    r13            0x7fffffffe5e0   140737488348640
    r14            0x0      0
    r15            0x0      0
    rip            0x4005df 0x4005df <main+34>
    eflags         0x202    [ IF ]
    cs             0x33     51
    ss             0x2b     43
    ds             0x0      0
    es             0x0      0
    fs             0x0      0
    gs             0x0      0
